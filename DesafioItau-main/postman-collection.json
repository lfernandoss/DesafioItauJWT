{
	"info": {
		"_postman_id": "desafio-itau-jwt-api",
		"name": "Desafio Itaú - JWT API",
		"description": "Collection para testar a API de validação de JWT do Desafio Itaú",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "12345678"
	},
	"item": [
		{
			"name": "Health Check",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{base_url}}/actuator/health",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"actuator",
						"health"
					]
				},
				"description": "Verifica se a aplicação está funcionando corretamente"
			},
			"response": []
		},
		{
			"name": "Application Info",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{base_url}}/actuator/info",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"actuator",
						"info"
					]
				},
				"description": "Obtém informações sobre a aplicação"
			},
			"response": []
		},
		{
			"name": "Prometheus Metrics",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{base_url}}/actuator/prometheus",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"actuator",
						"prometheus"
					]
				},
				"description": "Obtém métricas da aplicação no formato Prometheus"
			},
			"response": []
		},
		{
			"name": "JWT Validation",
			"item": [
				{
					"name": "Valid JWT Token",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Correlation-id",
								"value": "{{$guid}}",
								"description": "ID de correlação para rastreamento"
							}
						],
						"url": {
							"raw": "{{base_url}}/v1/validar/Jwt/eyJhbGciOiJIUzI1NiJ9.eyJSb2xlIjoiQWRtaW4iLCJTZWVkIjoiNzg0MSIsIk5hbWUiOiJUb25pbmhvIEFyYXVqbyJ9.QY05sIjtrcJnP533kQNk8QXcaleJ1Q01jWY_ZzIZuAg",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"v1",
								"validar",
								"Jwt",
								"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiaWF0IjoxNTE2MjM5MDIyfQ"
							]
						},
						"description": "Valida um token JWT válido"
					},
					"response": []
				},
				{
					"name": "Invalid JWT Token",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Correlation-id",
								"value": "{{$guid}}"
							}
						],
						"url": {
							"raw": "{{base_url}}/v1/validar/Jwt/jwt.invalido",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"v1",
								"validar",
								"Jwt",
								"jwt.invalido"
							]
						},
						"description": "Tenta validar um token JWT inválido"
					},
					"response": []
				},
				{
					"name": "Empty JWT Token",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Correlation-id",
								"value": "{{$guid}}"
							}
						],
						"url": {
							"raw": "{{base_url}}/v1/validar/Jwt/",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"v1",
								"validar",
								"Jwt",
								""
							]
						},
						"description": "Tenta validar um token JWT vazio"
					},
					"response": []
				},
				{
					"name": "Custom JWT Token",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Correlation-id",
								"value": "{{$guid}}"
							}
						],
						"url": {
							"raw": "{{base_url}}/v1/validar/Jwt/{{custom_jwt_token}}",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"v1",
								"validar",
								"Jwt",
								"{{custom_jwt_token}}"
							]
						},
						"description": "Valida um token JWT customizado (use a variável custom_jwt_token)"
					},
					"response": []
				}
			],
			"description": "Endpoints para validação de tokens JWT"
		}
			
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					"// Log da requisição",
					"console.log('Executando requisição:', pm.request.method, pm.request.url);",
					"",
					"// Adicionar timestamp se não existir",
					"if (!pm.globals.get('request_timestamp')) {",
					"    pm.globals.set('request_timestamp', new Date().toISOString());",
					"}"
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					"// Testes básicos",
					"pm.test('Status code is 200 or 204', function () {",
					"    pm.expect(pm.response.code).to.be.oneOf([200, 204]);",
					"});",
					"",
					"pm.test('Response time is less than 2000ms', function () {",
					"    pm.expect(pm.response.responseTime).to.be.below(2000);",
					"});",
					"",
					"// Teste específico para JWT validation",
					"if (pm.request.url.path.includes('/v1/validar/Jwt/')) {",
					"    pm.test('JWT validation returns boolean', function () {",
					"        const response = pm.response.json();",
					"        pm.expect(typeof response).to.equal('boolean');",
					"    });",
					"}",
					"",
					"// Teste para health check",
					"if (pm.request.url.path.includes('/actuator/health')) {",
					"    pm.test('Health check returns UP status', function () {",
					"        const response = pm.response.json();",
					"        pm.expect(response.status).to.equal('UP');",
					"    });",
					"}"
				]
			}
		}
	],
	"variable": [
		{
			"key": "base_url",
			"value": "http://localhost:8080",
			"type": "string",
			"description": "URL base da API (local ou EC2)"
		},
		{
			"key": "custom_jwt_token",
			"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiaWF0IjoxNTE2MjM5MDIyfQ",
			"type": "string",
			"description": "Token JWT customizado para testes"
		},
		{
			"key": "ec2_base_url",
			"value": "http://IP_DA_INSTANCIA:8080",
			"type": "string",
			"description": "URL base da API quando executada em EC2"
		}
	]
} 